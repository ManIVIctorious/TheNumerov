#!/bin/bash

#--------------------------------------------------
#      set default options and constants
#--------------------------------------------------
defaultoutputdir="normal_modes"

defaultgaussianversion=16
supported_gaussian_version_strings[0]="09"
supported_gaussian_version_strings[1]="16"

# length in formchk file is given in bohr, gaussianborh
# is the conversion factor from bohr to â„« as used in gaussian
gaussianbohr=0.5291772085936


#--------------------------------------------------
#                Print help page
#--------------------------------------------------
function MAN {
cat << EOF

Synopsis:  ${0##*/} {h} [v:gaussian version] inputfile [outputdir]

Description:
    Read a (frequency calculation) gaussian formcheck-file and extract its
        - minimum geometry       > outputdirectory/coords
        - normal frequency modes > outputdirectory/modes/mode_\d\{2,\}
        - atom masses            > outputdirectory/masses
        - harmonic frequencies   > outputdirectory/freq_harmonic
    and output a paste of minimum coordinates and masses for a quick check

    The default values are:
        Output Directory = $defaultoutputdir
        gaussian version = $defaultgaussianversion

    List of supported gaussian versions strings: ${supported_gaussian_version_strings[@]}

EOF
}
export -f MAN

for i in $@; do if [[ $i == '-h' ]]; then MAN; exit 0; fi; done
if [ $# -eq 0 ]; then MAN; exit 0; fi


#-----------------------------------------------------
# Populate variables and provide input error handling
#-----------------------------------------------------
inputfile="$1"
# set standard outputdir to $defaultoutputdir
#   if a second argument is given use that instead
outputdir="${2:-$defaultoutputdir}"

# set gaussian version
gaussianversion="${defaultgaussianversion}"

# additionally support getopts syntax
while getopts "hHi:o:v:" opt; do
    case $opt in
        h|H)    MAN; exit 0;;
        i) inputfile="$OPTARG";;
        o) outputdir="$OPTARG";;
        v) gaussianversion="$OPTARG";;
    esac
done
shift $(( OPTIND - 1 ))

if [ ! -f "$inputfile" ]; then printf "Please specify a valid inputfile\n"; MAN; exit 1; fi
if [ ! -d "$outputdir" ]; then mkdir -p "$outputdir"; fi

# check if gaussian version string is supported
control=0
for i in ${supported_gaussian_version_strings[@]}; do
    if [ ${gaussianversion} -eq $i ]; then
        control=$(( control + 1 ));
    fi
done
if [ $control -ne 1 ]; then
    printf "\nError: Set gaussian version \"${gaussianversion}\" not supported"
    printf "\n       Please use one of the following list instead\n"
    echo     "       ${supported_gaussian_version_strings[@]}"
    printf   "       Aborting...\n\n"
    exit 1
fi


#--------------------------------------------------
#             Actual start of script
#--------------------------------------------------
# get number of atoms
n_atoms=$(grep atoms $inputfile | awk '{print $5}')


#--------------------------------------------------
#               Generate masses file
#--------------------------------------------------
# in gaussian16 atomic masses are encapsulated between "Vib-AtMass" and "Vib-E2"
sed -n "/Vib-AtMass/,/Vib-E2/p" $inputfile | head -n-1 | tail -n+2 |
    awk '{
        for(i = 1; i <= NF; ++i){
            print $i
        }
    }' > $outputdir/masses


#--------------------------------------------------
#               Generate Atom map
#--------------------------------------------------
sed -n "/Atomic numbers/,/Nuclear charges/p" $inputfile | head -n-1 | tail -n+2 | tr -d '\n' | sed "s/\s*\b\([[:digit:]]\+\)\b\s*/\1\n/g" > $outputdir/atommap

# Make atommap human readable (translate numbers to atomic symbols)
#   this step is not mandatory. The numerical input will still work
#   in gaussian, therefore no exhaustive list is provided.
sed -i  "s/\b1\b/H/"    $outputdir/atommap
sed -i  "s/\b6\b/C/"    $outputdir/atommap
sed -i  "s/\b7\b/N/"    $outputdir/atommap
sed -i  "s/\b8\b/O/"    $outputdir/atommap
sed -i  "s/\b9\b/F/"    $outputdir/atommap
sed -i "s/\b17\b/Cl/"   $outputdir/atommap
sed -i "s/\b35\b/Br/"   $outputdir/atommap


#--------------------------------------------------
#  Check line numbers of atommap and masses files
#--------------------------------------------------
n_atmass=$(awk 'END{print NR}' $outputdir/masses)
n_at_map=$(awk 'END{print NR}' $outputdir/atommap)
if [ $n_atoms -ne $n_atmass -o $n_atoms -ne $n_at_map ]; then
    printf "\nError: Number of atoms ($n_atoms) not equal to "
    printf "number of atom masses ($n_atmass) and atom map ($n_at_map)\n"
    printf "       Aborting...\n\n"
    exit 2
fi


#--------------------------------------------------
#               Minimum coordinates
#--------------------------------------------------
# in gaussian09 the limits are: "Current cartesian coordinates" and "Force Field"
# in gaussian16 the limits are: "Current cartesian coordinates" and "Number of symbols"
if [ ${gaussianversion} -eq 09 ]; then
    limit1="/Current cartesian coordinates/";
    limit2="/Force Field/";
fi
if [ ${gaussianversion} -eq 16 ]; then
    limit1="/Current cartesian coordinates/";
    limit2="/Number of symbols/";
fi

sed -n "${limit1},${limit2}p" $inputfile | head -n-1 | tail -n+2 |
    awk '{
        for(i = 1; i <= NF; ++i){
            printf "\t% .8le", $i*'$gaussianbohr';

            if( (i + 5*(NR-1)) % 3 == 0){
                printf "\n"
            }

        }
    }' > $outputdir/coords

paste -d\  $outputdir/atommap $outputdir/coords > $outputdir/tmp
mv $outputdir/tmp $outputdir/coords
rm $outputdir/atommap

printf "Used geometry and masses for frequency calculation:\n"
paste $outputdir/coords $outputdir/masses | awk '{if(NF == 5){print $0 }else{ print $0; exit 7 }}'

if [ $? -ne 0 ]; then
    printf "\nError: Column count not equal for all columns"
    printf "\n       Aborting...\n\n"
    exit 3
fi


#--------------------------------------------------
#                   Normal modes
#--------------------------------------------------
if [ ! -d ${outputdir}/modes ]; then mkdir -p ${outputdir}/modes; fi

# in gaussian09 the limits are: "Vib-Modes" and "$"
# in gaussian16 the limits are: "Vib-Modes" and "ClPar"
if [ ${gaussianversion} -eq 09 ]; then
    limit1="/Vib-Modes/";
    limit2="$";
fi
if [ ${gaussianversion} -eq 16 ]; then
    limit1="/Vib-Modes/";
    limit2="/ClPar/";
fi
sed -n "${limit1},${limit2}p" $inputfile | head -n-1 | tail -n+2 |
    awk '{
        for(i = 1; i <= NF; ++i){
            printf "\t% .8le", $i

            if( (i + 5*(NR-1)) % 3 == 0){
                printf "\n"
            }

        }
    }' |
    awk '{
        if(NR % '$n_atoms' == 1){
            file = "'$outputdir/'modes/mode_" sprintf("%02d", NR/'$n_atoms' + 1)
        }
        print > file
    }'

count=0;
for i in ${outputdir}/modes/mode_*; do
    count=$((count + 1))
    paste $i $outputdir/masses > tmp_${i##*/}
    mv tmp_${i##*/} $i
done

#--------------------------------------------------
#             Harmonic Frequency File
#       (requires count from Normal Modes)
#--------------------------------------------------
sed -n "/Vib-E2/,/Vib-Modes/p" $inputfile | head -n-1 | tail -n+2 |
    awk ' BEGIN{ j = 0; }
    {
        for(i = 1; i <= NF; ++i){
            j += 1;
            printf "% 4.0lf    %12.6lf\n", j, $i;
            if('$count' <= j){
                exit
            }
        }
    }' > $outputdir/freq_harmonic
